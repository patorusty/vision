{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/patorusty/dev/web/vision/front/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/patorusty/dev/web/vision/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/patorusty/dev/web/vision/front/src/views/dashboard/components/core/AppBar.vue?vue&type=template&id=9d57e584&","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/views/dashboard/components/core/AppBar.vue","mtime":1608263910091},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}