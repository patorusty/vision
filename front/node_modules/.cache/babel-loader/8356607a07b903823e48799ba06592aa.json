{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/codigo_productor.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/codigo_productor.js","mtime":1614396805606},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYXRvcnVzdHkvZGV2L3dlYi92aXNpb24vZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgaHR0cCBmcm9tICIuLi9odHRwLXJlcXVlc3QiOwp2YXIgQVBJX1VSTCA9ICIvYWRtaW5pc3RyYWNpb24vY29kaWdvX3Byb2R1Y3RvcmVzIjsKCnZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7CiAgICBjb2RpZ29fcHJvZHVjdG9yZXM6IFtdLAogICAgY29kaWdvX3Byb2R1Y3RvcjogewogICAgICBjb2RpZ29fcHJvZHVjdG9yOiAiIiwKICAgICAgY3BPcmlnaW5hbDogJycsCiAgICAgIGFjdGl2bzogMQogICAgfSwKICAgIGxvYWRpbmc6IGZhbHNlCiAgfTsKfTsKCnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0NPRElHT19QUk9EVUNUT1JFUzogZnVuY3Rpb24gU0VUX0NPRElHT19QUk9EVUNUT1JFUyhzdGF0ZSwgY29kaWdvX3Byb2R1Y3RvcmVzKSB7CiAgICBzdGF0ZS5jb2RpZ29fcHJvZHVjdG9yZXMgPSBjb2RpZ29fcHJvZHVjdG9yZXM7CiAgfSwKICBTRVRfQ09ESUdPX1BST0RVQ1RPUjogZnVuY3Rpb24gU0VUX0NPRElHT19QUk9EVUNUT1Ioc3RhdGUsIGNvZGlnb19wcm9kdWN0b3IpIHsKICAgIHN0YXRlLmNvZGlnb19wcm9kdWN0b3IgPSBjb2RpZ29fcHJvZHVjdG9yOwogICAgc3RhdGUuY29kaWdvX3Byb2R1Y3Rvci5jcE9yaWdpbmFsID0gY29kaWdvX3Byb2R1Y3Rvci5jb2RpZ29fcHJvZHVjdG9yOwogIH0sCiAgUkVTRVRfQ09ESUdPX1BST0RVQ1RPUjogZnVuY3Rpb24gUkVTRVRfQ09ESUdPX1BST0RVQ1RPUihzdGF0ZSkgewogICAgc3RhdGUuY29kaWdvX3Byb2R1Y3RvciA9IE9iamVjdC5hc3NpZ24oe30sIHsKICAgICAgY29kaWdvX3Byb2R1Y3RvcjogIiIsCiAgICAgIGNwT3JpZ2luYWw6ICcnLAogICAgICBhY3Rpdm86IDEKICAgIH0pOwogIH0sCiAgVVBEQVRFX0NPRElHT19QUk9EVUNUT1I6IGZ1bmN0aW9uIFVQREFURV9DT0RJR09fUFJPRFVDVE9SKHN0YXRlLCBjb2RpZ29fcHJvZHVjdG9yKSB7CiAgICB2YXIgaXRlbSA9IHN0YXRlLmNvZGlnb19wcm9kdWN0b3Jlcy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmlkID09PSBjb2RpZ29fcHJvZHVjdG9yLmlkOwogICAgfSk7CiAgICBPYmplY3QuYXNzaWduKGl0ZW0sIGNvZGlnb19wcm9kdWN0b3IpOwogIH0sCiAgQ1JFQVRFX0NPRElHT19QUk9EVUNUT1I6IGZ1bmN0aW9uIENSRUFURV9DT0RJR09fUFJPRFVDVE9SKHN0YXRlLCBjb2RpZ29fcHJvZHVjdG9yKSB7CiAgICBzdGF0ZS5jb2RpZ29fcHJvZHVjdG9yZXMucHVzaChjb2RpZ29fcHJvZHVjdG9yKTsKICB9LAogIERFTEVURV9DT0RJR09fUFJPRFVDVE9SOiBmdW5jdGlvbiBERUxFVEVfQ09ESUdPX1BST0RVQ1RPUihzdGF0ZSwgaWQpIHsKICAgIHN0YXRlLmNvZGlnb19wcm9kdWN0b3JlcyA9IHN0YXRlLmNvZGlnb19wcm9kdWN0b3Jlcy5maWx0ZXIoZnVuY3Rpb24gKHUpIHsKICAgICAgcmV0dXJuIHUuaWQgIT0gaWQ7CiAgICB9KTsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGdldENvZGlnb1Byb2R1Y3RvcmVzOiBmdW5jdGlvbiBnZXRDb2RpZ29Qcm9kdWN0b3JlcyhfcmVmLCBjb21wYW5pYV9pZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmdldE9uZSgnL2NvZGlnb19wcm9kdWN0b3IvY29tcGFuaWEnLCBjb21wYW5pYV9pZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCJTRVRfQ09ESUdPX1BST0RVQ1RPUkVTIiwgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGdldENvZGlnb1Byb2R1Y3RvcjogZnVuY3Rpb24gZ2V0Q29kaWdvUHJvZHVjdG9yKF9yZWYyLCBpZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3A7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gaHR0cC5nZXRPbmUoQVBJX1VSTCwgaWQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBjb21taXQoIlNFVF9DT0RJR09fUFJPRFVDVE9SIiwgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlQ29kaWdvUHJvZHVjdG9yOiBmdW5jdGlvbiB1cGRhdGVDb2RpZ29Qcm9kdWN0b3IoX3JlZjMsIGNvZGlnb19wcm9kdWN0b3IpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucHV0KEFQSV9VUkwsIGNvZGlnb19wcm9kdWN0b3IuaWQsIGNvZGlnb19wcm9kdWN0b3IpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzcC5zdGF0dXMgPT09IDIwMCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbW1pdCgiVVBEQVRFX0NPRElHT19QUk9EVUNUT1IiLCByZXNwLmRhdGEpOwogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgICBzbmFja1RleHQ6ICJDw7NkaWdvIFByb2R1Y3RvciBlZGl0YWRvIGNvbiDDqXhpdG8hIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIoewogICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkFsZ28gc2FsacOzIG1hbC4uLiIKICAgICAgICAgICAgICB9KSwgewogICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgY3JlYXRlQ29kaWdvUHJvZHVjdG9yOiBmdW5jdGlvbiBjcmVhdGVDb2RpZ29Qcm9kdWN0b3IoX3JlZjQsIGNvZGlnb19wcm9kdWN0b3IpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucG9zdChBUElfVVJMLCBjb2RpZ29fcHJvZHVjdG9yKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlc3Auc3RhdHVzID09PSAyMDEpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb21taXQoIkNSRUFURV9DT0RJR09fUFJPRFVDVE9SIiwgcmVzcC5kYXRhKTsKICAgICAgICAgICAgICBjb21taXQoInNuYWNrYmFyL1NIT1dfU05BQ0siLCB7CiAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiQ8OzZGlnbyBQcm9kdWN0b3IgY3JlYWRvIGNvbiDDqXhpdG8hIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkFsZ28gc2FsacOzIG1hbCwgaW50ZW50ZSBudWV2YW1lbnRlLi4uIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZUNvZGlnb1Byb2R1Y3RvcjogZnVuY3Rpb24gZGVsZXRlQ29kaWdvUHJvZHVjdG9yKF9yZWY1LCBpZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3A7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gaHR0cC5kZWxldGUoQVBJX1VSTCwgaWQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDUuc2VudDsKCiAgICAgICAgICAgICAgaWYgKHJlc3Auc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgiREVMRVRFX0NPRElHT19QUk9EVUNUT1IiLCBpZCk7CiAgICAgICAgICAgICAgICBjb21taXQoInNuYWNrYmFyL1NIT1dfU05BQ0siLCB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkPDs2RpZ28gUHJvZHVjdG9yIGVsaW1pbmFkbyBjb24gw6l4aXRvISIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwLnN0YXR1cyA9PT0gMjAyKSB7CiAgICAgICAgICAgICAgICBjb21taXQoInNuYWNrYmFyL1NIT1dfU05BQ0siLCB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiRXhpc3RlbiBQw7NsaXphcyByZWxhY2lvbmFkYXMgYSBlc3RlIEPDs2RpZ28gUHJvZHVjdG9yIgogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIih7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkFsZ28gc2FsacOzIG1hbC4uLiIKICAgICAgICAgICAgICAgIH0pLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczoge30KfTs="},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/codigo_productor.js"],"names":["http","API_URL","state","codigo_productores","codigo_productor","cpOriginal","activo","loading","mutations","SET_CODIGO_PRODUCTORES","SET_CODIGO_PRODUCTOR","RESET_CODIGO_PRODUCTOR","Object","assign","UPDATE_CODIGO_PRODUCTOR","item","find","id","CREATE_CODIGO_PRODUCTOR","push","DELETE_CODIGO_PRODUCTOR","filter","u","actions","getCodigoProductores","compania_id","commit","getOne","resp","data","getCodigoProductor","updateCodigoProductor","put","status","color","snackText","root","createCodigoProductor","post","deleteCodigoProductor","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = \"/administracion/codigo_productores\";\n\nconst state = () => ({\n  codigo_productores: [],\n  codigo_productor: {\n    codigo_productor: \"\",\n    cpOriginal: '',\n    activo: 1\n  },\n  loading: false\n});\nconst mutations = {\n  SET_CODIGO_PRODUCTORES(state, codigo_productores) {\n    state.codigo_productores = codigo_productores;\n  },\n  SET_CODIGO_PRODUCTOR(state, codigo_productor) {\n    state.codigo_productor = codigo_productor;\n    state.codigo_productor.cpOriginal = codigo_productor.codigo_productor\n\n  },\n  RESET_CODIGO_PRODUCTOR(state) {\n    state.codigo_productor = Object.assign({}, {\n      codigo_productor: \"\",\n      cpOriginal: '',\n      activo: 1\n    });\n  },\n  UPDATE_CODIGO_PRODUCTOR(state, codigo_productor) {\n    const item = state.codigo_productores.find(\n      item => item.id === codigo_productor.id\n    );\n    Object.assign(item, codigo_productor);\n  },\n  CREATE_CODIGO_PRODUCTOR(state, codigo_productor) {\n    state.codigo_productores.push(codigo_productor);\n  },\n  DELETE_CODIGO_PRODUCTOR(state, id) {\n    state.codigo_productores = state.codigo_productores.filter(u => u.id != id);\n  }\n};\nconst actions = {\n  async getCodigoProductores({ commit }, compania_id) {\n    const resp = await http.getOne('/codigo_productor/compania', compania_id);\n    commit(\"SET_CODIGO_PRODUCTORES\", resp.data);\n  },\n\n  async getCodigoProductor({ commit }, id) {\n    const resp = await http.getOne(API_URL, id);\n    commit(\"SET_CODIGO_PRODUCTOR\", resp.data);\n  },\n\n  async updateCodigoProductor({ commit }, codigo_productor) {\n    const resp = await http.put(\n      API_URL,\n      codigo_productor.id,\n      codigo_productor\n    );\n    if (resp.status === 200) {\n      commit(\"UPDATE_CODIGO_PRODUCTOR\", resp.data);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          color: \"success\",\n          snackText: \"Código Productor editado con éxito!\"\n        },\n        { root: true }\n      );\n      return true;\n    } else {\n      commit(\n        \"snackbar/SHOW_SNACK\"({\n          color: \"success\",\n          snackText: \"Algo salió mal...\"\n        }),\n        { root: true }\n      );\n    }\n  },\n\n  async createCodigoProductor({ commit }, codigo_productor) {\n    const resp = await http.post(API_URL, codigo_productor);\n    if (resp.status === 201) {\n      commit(\"CREATE_CODIGO_PRODUCTOR\", resp.data);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          color: \"success\",\n          snackText: \"Código Productor creado con éxito!\"\n        },\n        { root: true }\n      );\n      return true;\n    } else {\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          color: \"red\",\n          snackText: \"Algo salió mal, intente nuevamente...\"\n        },\n        { root: true }\n      );\n    }\n  },\n\n  async deleteCodigoProductor({ commit }, id) {\n    const resp = await http.delete(API_URL, id);\n    if (resp.status === 200) {\n      commit(\"DELETE_CODIGO_PRODUCTOR\", id);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          color: \"success\",\n          snackText: \"Código Productor eliminado con éxito!\"\n        },\n        { root: true }\n      );\n    }else if (resp.status === 202) {\n      commit(\n          \"snackbar/SHOW_SNACK\", {\n          color: \"red\",\n          snackText: \"Existen Pólizas relacionadas a este Código Productor\"\n      },\n          { root: true }\n      );\n  } else {\n      commit(\n        \"snackbar/SHOW_SNACK\"({\n          color: \"success\",\n          snackText: \"Algo salió mal...\"\n        }),\n        { root: true }\n      );\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters: {}\n};\n"]}]}