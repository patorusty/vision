{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/endoso.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/endoso.js","mtime":1614547689367},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYXRvcnVzdHkvZGV2L3dlYi92aXNpb24vZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgaHR0cCBmcm9tICIuLi9odHRwLXJlcXVlc3QiOwp2YXIgQVBJX1VSTCA9ICcvZW5kb3Nvcyc7Cgp2YXIgc3RhdGUgPSBmdW5jdGlvbiBzdGF0ZSgpIHsKICByZXR1cm4gewogICAgZW5kb3NvczogW10sCiAgICBlbmRvc286IHt9LAogICAgdGlwb19lbmRvc29zOiBbXSwKICAgIGRldGFsbGVfZW5kb3NvczogW10sCiAgICBsb2FkaW5nOiB0cnVlCiAgfTsKfTsKCnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0VORE9TT1M6IGZ1bmN0aW9uIFNFVF9FTkRPU09TKHN0YXRlLCBlbmRvc29zKSB7CiAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5lbmRvc29zID0gZW5kb3NvczsKICB9LAogIFNFVF9FTkRPU086IGZ1bmN0aW9uIFNFVF9FTkRPU08oc3RhdGUsIGVuZG9zbykgewogICAgc3RhdGUuZW5kb3NvID0gZW5kb3NvOwogICAgc3RhdGUubG9hZGluZyA9IGZhbHNlOwogIH0sCiAgUkVTRVRfRU5ET1NPOiBmdW5jdGlvbiBSRVNFVF9FTkRPU08oc3RhdGUpIHsKICAgIHN0YXRlLmVuZG9zbyA9IE9iamVjdC5hc3NpZ24oe30sIHt9KTsKICB9LAogIENSRUFURV9FTkRPU086IGZ1bmN0aW9uIENSRUFURV9FTkRPU08oc3RhdGUsIGVuZG9zbykgewogICAgc3RhdGUuZW5kb3Nvcy5wdXNoKGVuZG9zbyk7CiAgfSwKICBVUERBVEVfRU5ET1NPOiBmdW5jdGlvbiBVUERBVEVfRU5ET1NPKHN0YXRlLCBlbmRvc28pIHsKICAgIHZhciBpdGVtID0gc3RhdGUuZW5kb3Nvcy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmlkID09PSBlbmRvc28uaWQ7CiAgICB9KTsKICAgIE9iamVjdC5hc3NpZ24oaXRlbSwgZW5kb3NvKTsKICB9LAogIERFTEVURV9FTkRPU086IGZ1bmN0aW9uIERFTEVURV9FTkRPU08oc3RhdGUsIGlkKSB7CiAgICBzdGF0ZS5lbmRvc29zID0gc3RhdGUuZW5kb3Nvcy5maWx0ZXIoZnVuY3Rpb24gKGMpIHsKICAgICAgcmV0dXJuIGMuaWQgIT0gaWQ7CiAgICB9KTsKICB9LAogIFNFVF9USVBPX0VORE9TT1M6IGZ1bmN0aW9uIFNFVF9USVBPX0VORE9TT1Moc3RhdGUsIHRpcG9fZW5kb3NvcykgewogICAgc3RhdGUudGlwb19lbmRvc29zID0gdGlwb19lbmRvc29zOwogIH0sCiAgU0VUX0RFVEFMTEVfRU5ET1NPUzogZnVuY3Rpb24gU0VUX0RFVEFMTEVfRU5ET1NPUyhzdGF0ZSwgZGV0YWxsZV9lbmRvc29zKSB7CiAgICBzdGF0ZS5kZXRhbGxlX2VuZG9zb3MgPSBkZXRhbGxlX2VuZG9zb3M7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRFbmRvc29zOiBmdW5jdGlvbiBnZXRFbmRvc29zKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3A7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gaHR0cC5nZXQoQVBJX1VSTCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfRU5ET1NPUycsIHJlc3AuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRFbmRvc286IGZ1bmN0aW9uIGdldEVuZG9zbyhfcmVmMiwgaWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAuZ2V0T25lKEFQSV9VUkwsIGlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfRU5ET1NPJywgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0RW5kb3Nvc0RlUG9saXphOiBmdW5jdGlvbiBnZXRFbmRvc29zRGVQb2xpemEoX3JlZjMsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmdldE9uZSgnL2VuZG9zb3MvaW5kZXhGaWx0cmFkbycsIGlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfRU5ET1NPUycsIHJlc3AuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGNyZWF0ZUVuZG9zbzogZnVuY3Rpb24gY3JlYXRlRW5kb3NvKF9yZWY0LCBlbmRvc28pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucG9zdChBUElfVVJMLCBlbmRvc28pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzcC5zdGF0dXMgPT09IDIwMSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbW1pdCgiQ1JFQVRFX0VORE9TTyIsIHJlc3AuZGF0YSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgc25hY2tiYXI6IHRydWUsCiAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiRW5kb3NvIGNyZWFkbyBjb24gw6l4aXRvISIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjb21taXQoInNuYWNrYmFyL1NIT1dfU05BQ0siLCB7CiAgICAgICAgICAgICAgICBzbmFja2JhcjogdHJ1ZSwKICAgICAgICAgICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkFsZ28gc2FsacOzIG1hbCwgaW50ZW50ZSBudWV2YW1lbnRlLi4uIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZUVuZG9zbzogZnVuY3Rpb24gdXBkYXRlRW5kb3NvKF9yZWY1LCBlbmRvc28pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucHV0KEFQSV9VUkwsIGVuZG9zby5pZCwgZW5kb3NvKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQ1LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlc3Auc3RhdHVzID09PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb21taXQoIlVQREFURV9FTkRPU08iLCByZXNwLmRhdGEpOwogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIHNuYWNrYmFyOiB0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkVuZG9zbyBlZGl0YWRvIGNvbiDDqXhpdG8hIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIHNuYWNrYmFyOiB0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiQWxnbyBzYWxpw7MgbWFsLCBpbnRlbnRlIG51ZXZhbWVudGUuLi4iCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlRW5kb3NvOiBmdW5jdGlvbiBkZWxldGVFbmRvc28oX3JlZjYsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmRlbGV0ZShBUElfVVJMLCBpZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0Ni5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzcC5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCJERUxFVEVfRU5ET1NPIiwgaWQpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgICBzbmFja2JhcjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiRW5kb3NvIGVsaW1pbmFkbyBjb24gw6l4aXRvISIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ21vZGFsL0hJREVfTU9EQUwnLCBmYWxzZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICBzbmFja1RleHQ6ICJBbGdvIHNhbGnDsyBtYWwuLi4iCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU2KTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0VGlwb0VuZG9zb3M6IGZ1bmN0aW9uIGdldFRpcG9FbmRvc29zKF9yZWY3KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU3JChfY29udGV4dDcpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgidGlwb2VuZG9zb3MiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQ3LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCJTRVRfVElQT19FTkRPU09TIiwgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU3KTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0RGV0YWxsZUVuZG9zb3M6IGZ1bmN0aW9uIGdldERldGFsbGVFbmRvc29zKF9yZWY4KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOCgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU4JChfY29udGV4dDgpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmOC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgiZGV0YWxsZWVuZG9zb3MiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQ4LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCJTRVRfREVUQUxMRV9FTkRPU09TIiwgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU4KTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczoge30KfTs="},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/endoso.js"],"names":["http","API_URL","state","endosos","endoso","tipo_endosos","detalle_endosos","loading","mutations","SET_ENDOSOS","SET_ENDOSO","RESET_ENDOSO","Object","assign","CREATE_ENDOSO","push","UPDATE_ENDOSO","item","find","id","DELETE_ENDOSO","filter","c","SET_TIPO_ENDOSOS","SET_DETALLE_ENDOSOS","actions","getEndosos","commit","get","resp","data","getEndoso","getOne","getEndososDePoliza","createEndoso","post","status","snackbar","color","snackText","root","updateEndoso","put","deleteEndoso","delete","getTipoEndosos","getDetalleEndosos","namespaced","getters"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AAEA,IAAMC,OAAO,GAAG,UAAhB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACjBC,IAAAA,OAAO,EAAE,EADQ;AAEjBC,IAAAA,MAAM,EAAE,EAFS;AAGjBC,IAAAA,YAAY,EAAE,EAHG;AAIjBC,IAAAA,eAAe,EAAE,EAJA;AAKjBC,IAAAA,OAAO,EAAE;AALQ,GAAP;AAAA,CAAd;;AAOA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WADc,uBACFP,KADE,EACKC,OADL,EACc;AACxBD,IAAAA,KAAK,CAACK,OAAN,GAAgB,KAAhB;AACAL,IAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AACH,GAJa;AAKdO,EAAAA,UALc,sBAKHR,KALG,EAKIE,MALJ,EAKY;AACtBF,IAAAA,KAAK,CAACE,MAAN,GAAeA,MAAf;AACAF,IAAAA,KAAK,CAACK,OAAN,GAAgB,KAAhB;AACH,GARa;AASdI,EAAAA,YATc,wBASDT,KATC,EASM;AAChBA,IAAAA,KAAK,CAACE,MAAN,GAAeQ,MAAM,CAACC,MAAP,CACX,EADW,EAEX,EAFW,CAAf;AAIH,GAda;AAedC,EAAAA,aAfc,yBAeAZ,KAfA,EAeOE,MAfP,EAee;AACzBF,IAAAA,KAAK,CAACC,OAAN,CAAcY,IAAd,CAAmBX,MAAnB;AACH,GAjBa;AAkBdY,EAAAA,aAlBc,yBAkBAd,KAlBA,EAkBOE,MAlBP,EAkBe;AACzB,QAAIa,IAAI,GAAGf,KAAK,CAACC,OAAN,CAAce,IAAd,CAAmB,UAAAD,IAAI;AAAA,aAAIA,IAAI,CAACE,EAAL,KAAYf,MAAM,CAACe,EAAvB;AAAA,KAAvB,CAAX;AACAP,IAAAA,MAAM,CAACC,MAAP,CAAcI,IAAd,EAAoBb,MAApB;AACH,GArBa;AAsBdgB,EAAAA,aAtBc,yBAsBAlB,KAtBA,EAsBOiB,EAtBP,EAsBW;AACrBjB,IAAAA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,CAAckB,MAAd,CAAqB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACH,EAAF,IAAQA,EAAZ;AAAA,KAAtB,CAAhB;AACH,GAxBa;AAyBdI,EAAAA,gBAzBc,4BAyBGrB,KAzBH,EAyBUG,YAzBV,EAyBwB;AAClCH,IAAAA,KAAK,CAACG,YAAN,GAAqBA,YAArB;AACH,GA3Ba;AA4BdmB,EAAAA,mBA5Bc,+BA4BMtB,KA5BN,EA4BaI,eA5Bb,EA4B8B;AACxCJ,IAAAA,KAAK,CAACI,eAAN,GAAwBA,eAAxB;AACH;AA9Ba,CAAlB;AAgCA,IAAMmB,OAAO,GAAG;AACNC,EAAAA,UADM,4BACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACN3B,IAAI,CAAC4B,GAAL,CAAS3B,OAAT,CADM;;AAAA;AACnB4B,cAAAA,IADmB;AAEzBF,cAAAA,MAAM,CAAC,aAAD,EAAgBE,IAAI,CAACC,IAArB,CAAN;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5B,GAJW;AAKNC,EAAAA,SALM,4BAKgBZ,EALhB,EAKoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdQ,cAAAA,MAAc,SAAdA,MAAc;AAAA;AAAA,qBACT3B,IAAI,CAACgC,MAAL,CAAY/B,OAAZ,EAAqBkB,EAArB,CADS;;AAAA;AACtBU,cAAAA,IADsB;AAE5BF,cAAAA,MAAM,CAAC,YAAD,EAAeE,IAAI,CAACC,IAApB,CAAN;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG/B,GARW;AASNG,EAAAA,kBATM,qCASyBd,EATzB,EAS6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdQ,cAAAA,MAAc,SAAdA,MAAc;AAAA;AAAA,qBAClB3B,IAAI,CAACgC,MAAL,CAAY,wBAAZ,EAAsCb,EAAtC,CADkB;;AAAA;AAC/BU,cAAAA,IAD+B;AAErCF,cAAAA,MAAM,CAAC,aAAD,EAAgBE,IAAI,CAACC,IAArB,CAAN;;AAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGxC,GAZW;AAaNI,EAAAA,YAbM,+BAamB9B,MAbnB,EAa2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBuB,cAAAA,MAAkB,SAAlBA,MAAkB;AAAA;AAAA,qBAChB3B,IAAI,CAACmC,IAAL,CAAUlC,OAAV,EAAmBG,MAAnB,CADgB;;AAAA;AAC7ByB,cAAAA,IAD6B;;AAAA,oBAE/BA,IAAI,CAACO,MAAL,KAAgB,GAFe;AAAA;AAAA;AAAA;;AAG/BT,cAAAA,MAAM,CAAC,eAAD,EAAkBE,IAAI,CAACC,IAAvB,CAAN;AACAH,cAAAA,MAAM,CACF,qBADE,EAEF;AACIU,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,KAAK,EAAE,SAFX;AAGIC,gBAAAA,SAAS,EAAE;AAHf,eAFE,EAOF;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAPE,CAAN;AAJ+B,gDAaxB,IAbwB;;AAAA;AAe/Bb,cAAAA,MAAM,CACF,qBADE,EAEF;AACIU,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,KAAK,EAAE,KAFX;AAGIC,gBAAAA,SAAS,EAAE;AAHf,eAFE,EAOF;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAPE,CAAN;;AAf+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBtC,GAtCW;AAuCNC,EAAAA,YAvCM,+BAuCmBrC,MAvCnB,EAuC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlBuB,cAAAA,MAAkB,SAAlBA,MAAkB;AAAA;AAAA,qBAChB3B,IAAI,CAAC0C,GAAL,CACfzC,OADe,EAEfG,MAAM,CAACe,EAFQ,EAGff,MAHe,CADgB;;AAAA;AAC7ByB,cAAAA,IAD6B;;AAAA,oBAM/BA,IAAI,CAACO,MAAL,KAAgB,GANe;AAAA;AAAA;AAAA;;AAO/BT,cAAAA,MAAM,CAAC,eAAD,EAAkBE,IAAI,CAACC,IAAvB,CAAN;AACAH,cAAAA,MAAM,CACF,qBADE,EAEF;AACIU,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,KAAK,EAAE,SAFX;AAGIC,gBAAAA,SAAS,EAAE;AAHf,eAFE,EAOF;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAPE,CAAN;AAR+B,gDAiBxB,IAjBwB;;AAAA;AAmB/Bb,cAAAA,MAAM,CACF,qBADE,EAEF;AACIU,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,KAAK,EAAE,KAFX;AAGIC,gBAAAA,SAAS,EAAE;AAHf,eAFE,EAOF;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAPE,CAAN;;AAnB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BtC,GApEW;AAqENG,EAAAA,YArEM,+BAqEmBxB,EArEnB,EAqEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAdQ,cAAAA,MAAc,SAAdA,MAAc;AAAA;AAAA,qBACZ3B,IAAI,CAAC4C,MAAL,CAAY3C,OAAZ,EAAqBkB,EAArB,CADY;;AAAA;AACzBU,cAAAA,IADyB;;AAE/B,kBAAIA,IAAI,CAACO,MAAL,KAAgB,GAApB,EAAyB;AACrBT,gBAAAA,MAAM,CAAC,eAAD,EAAkBR,EAAlB,CAAN;AACAQ,gBAAAA,MAAM,CACF,qBADE,EAEF;AACIU,kBAAAA,QAAQ,EAAE,IADd;AAEIC,kBAAAA,KAAK,EAAE,SAFX;AAGIC,kBAAAA,SAAS,EAAE;AAHf,iBAFE,EAOF;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAPE,CAAN;AASAb,gBAAAA,MAAM,CAAC,kBAAD,EAAqB,KAArB,EACF;AAAEa,kBAAAA,IAAI,EAAE;AAAR,iBADE,CAAN;AAEH,eAbD,MAaO;AACHb,gBAAAA,MAAM,CACF,qBADE,EACqB;AACvBW,kBAAAA,KAAK,EAAE,SADgB;AAEvBC,kBAAAA,SAAS,EAAE;AAFY,iBADrB,EAKF;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBALE,CAAN;AAOH;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBlC,GA7FW;AA8FNK,EAAAA,cA9FM,iCA8FqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVlB,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACV3B,IAAI,CAAC4B,GAAL,CAAS,aAAT,CADU;;AAAA;AACvBC,cAAAA,IADuB;AAE7BF,cAAAA,MAAM,CAAC,kBAAD,EAAqBE,IAAI,CAACC,IAA1B,CAAN;;AAF6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhC,GAjGW;AAkGNgB,EAAAA,iBAlGM,oCAkGwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVnB,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACb3B,IAAI,CAAC4B,GAAL,CAAS,gBAAT,CADa;;AAAA;AAC1BC,cAAAA,IAD0B;AAEhCF,cAAAA,MAAM,CAAC,qBAAD,EAAwBE,IAAI,CAACC,IAA7B,CAAN;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnC;AArGW,CAAhB;AAwGA,eAAe;AACXiB,EAAAA,UAAU,EAAE,IADD;AAEX7C,EAAAA,KAAK,EAALA,KAFW;AAGXM,EAAAA,SAAS,EAATA,SAHW;AAIXiB,EAAAA,OAAO,EAAPA,OAJW;AAKXuB,EAAAA,OAAO,EAAE;AALE,CAAf","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/endosos';\n\nconst state = () => ({\n    endosos: [],\n    endoso: {},\n    tipo_endosos: [],\n    detalle_endosos: [],\n    loading: true\n});\nconst mutations = {\n    SET_ENDOSOS(state, endosos) {\n        state.loading = false\n        state.endosos = endosos\n    },\n    SET_ENDOSO(state, endoso) {\n        state.endoso = endoso\n        state.loading = false\n    },\n    RESET_ENDOSO(state) {\n        state.endoso = Object.assign(\n            {},\n            {}\n        );\n    },\n    CREATE_ENDOSO(state, endoso) {\n        state.endosos.push(endoso);\n    },\n    UPDATE_ENDOSO(state, endoso) {\n        var item = state.endosos.find(item => item.id === endoso.id);\n        Object.assign(item, endoso);\n    },\n    DELETE_ENDOSO(state, id) {\n        state.endosos = state.endosos.filter(c => c.id != id);\n    },\n    SET_TIPO_ENDOSOS(state, tipo_endosos) {\n        state.tipo_endosos = tipo_endosos;\n    },\n    SET_DETALLE_ENDOSOS(state, detalle_endosos) {\n        state.detalle_endosos = detalle_endosos;\n    },\n};\nconst actions = {\n    async getEndosos({ commit }) {\n        const resp = await http.get(API_URL);\n        commit('SET_ENDOSOS', resp.data)\n    },\n    async getEndoso({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit('SET_ENDOSO', resp.data)\n    },\n    async getEndososDePoliza({ commit }, id) {\n        const resp = await http.getOne('/endosos/indexFiltrado', id);\n        commit('SET_ENDOSOS', resp.data)\n    },\n    async createEndoso({ commit }, endoso) {\n        const resp = await http.post(API_URL, endoso)\n        if (resp.status === 201) {\n            commit(\"CREATE_ENDOSO\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Endoso creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n    async updateEndoso({ commit }, endoso) {\n        const resp = await http.put(\n            API_URL,\n            endoso.id,\n            endoso\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_ENDOSO\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Endoso editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n    async deleteEndoso({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_ENDOSO\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Endoso eliminado con éxito!\"\n                },\n                { root: true }\n            );\n            commit('modal/HIDE_MODAL', false,\n                { root: true });\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    },\n    async getTipoEndosos({ commit }) {\n        const resp = await http.get(\"tipoendosos\");\n        commit(\"SET_TIPO_ENDOSOS\", resp.data);\n    },\n    async getDetalleEndosos({ commit }) {\n        const resp = await http.get(\"detalleendosos\");\n        commit(\"SET_DETALLE_ENDOSOS\", resp.data);\n    },\n\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}