{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/poliza.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/poliza.js","mtime":1626454897672},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/poliza.js"],"names":["http","moment","API_URL","setMediodia","fecha","m","set","toJSON","state","polizas","poliza","vigencia_desde","tipo_vigencia_id","fecha_solicitud","endosos","loading","tipo_riesgos","riesgo","forma_pagos","tipo_vigencias","mutations","SET_POLIZAS","SET_POLIZA","RESET_POLIZA","Object","assign","CREATE_POLIZA","push","UPDATE_POLIZA","item","find","id","DELETE_POLIZA","filter","c","SET_TIPO_RIESGOS","SET_FORMA_PAGOS","SET_TIPO_VIGENCIAS","SET_NUMERO_SOLICITUD","numero_solicitud","SET_RIESGO","actions","getPolizas","commit","get","resp","data","getPoliza","dispatch","getOne","root","compania_id","createPoliza","post","status","snackbar","color","snackText","updatePoliza","put","deletePoliza","delete","getTipoRiesgos","getFormaPagos","getTipoVigencias","cargarUltimoNumeroSolicitud","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\nimport moment from \"moment\";\n\nconst API_URL = \"/polizas\";\n\nconst setMediodia = fecha => {\n  var m = moment(fecha, \"ddd MMM D YYYY HH:mm:ss ZZ\");\n  m.set(\"hour\", 12);\n  m.set(\"minute\", 0);\n  m.set(\"second\", 0);\n  return m.toJSON();\n};\n\nconst state = () => ({\n  polizas: [],\n  poliza: {\n    vigencia_desde: setMediodia(moment()),\n    tipo_vigencia_id: 6,\n    fecha_solicitud: setMediodia(moment()),\n    endosos: []\n  },\n  loading: true,\n  tipo_riesgos: [],\n  riesgo:{},\n  forma_pagos: [],\n  tipo_vigencias: [],\n});\nconst mutations = {\n  SET_POLIZAS(state, polizas) {\n    state.loading = false;\n    state.polizas = polizas;\n  },\n  SET_POLIZA(state, poliza) {\n    state.poliza = poliza;\n    state.loading = false;\n  },\n  RESET_POLIZA(state) {\n    state.poliza = Object.assign(\n      {},\n      {\n          vigencia_desde: setMediodia(moment()),\n          tipo_vigencia_id: 6,\n          fecha_solicitud: setMediodia(moment()),\n          endosos: []\n      }\n    );\n  },\n  CREATE_POLIZA(state, poliza) {\n    state.polizas.push(poliza);\n  },\n  UPDATE_POLIZA(state, poliza) {\n    var item = state.polizas.find(item => item.id === poliza.id);\n    return Object.assign(item, poliza);\n  },\n  DELETE_POLIZA(state, id) {\n    state.polizas = state.polizas.filter(c => c.id != id);\n  },\n  SET_TIPO_RIESGOS(state, tipo_riesgos) {\n    state.tipo_riesgos = tipo_riesgos;\n  },\n  SET_FORMA_PAGOS(state, forma_pagos) {\n    state.forma_pagos = forma_pagos;\n  },\n  SET_TIPO_VIGENCIAS(state, tipo_vigencias) {\n    state.tipo_vigencias = tipo_vigencias;\n  },\n  SET_NUMERO_SOLICITUD(state, numero_solicitud) {\n    state.poliza.numero_solicitud = numero_solicitud;\n  },\n  // SET_ENDOSOS_POR_POLIZA(state, endosos) {\n  //   state.poliza.endosos = endosos;  \n  // },\n  SET_RIESGO(state, riesgo) {\n    state.riesgo = riesgo;\n  },\n};\nconst actions = {\n  async getPolizas({ commit }) {\n    const resp = await http.get(API_URL);\n    commit(\"SET_POLIZAS\", resp.data);\n  },\n  async getPoliza({ commit, dispatch, state }, id) {\n    const resp = await http.getOne(API_URL, id);\n    commit(\"SET_POLIZA\", resp.data);\n    dispatch('endoso/getEndososDePoliza', id, {root:true})\n    dispatch('siniestro/getSiniestrosDePoliza', id, {root:true})\n    dispatch('endoso/getTipoEndosos', null, {root:true})\n    dispatch('endoso/getDetalleEndosos', null, {root:true})\n    dispatch('cobertura/getCoberturas', resp.data.compania_id, {root:true})\n    // if (\n    //   state.poliza.riesgo_automotor.length < 1 ||\n    //   state.poliza.otro_riesgo.length < 1\n    // ) {\n    //   commit(\n    //     \"modal/SHOW_MODAL\",true, {root:true});\n    // }\n  },\n  async createPoliza({ commit }, poliza) {\n    const resp = await http.post(API_URL, poliza);\n    if (resp.status === 201) {\n      commit(\"CREATE_POLIZA\", resp.data);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          snackbar: true,\n          color: \"success\",\n          snackText: \"Poliza creada con éxito!\"\n        },\n        { root: true }\n      );\n      return true;\n    } else {\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          snackbar: true,\n          color: \"red\",\n          snackText: \"Algo salió mal, intente nuevamente...\"\n        },\n        { root: true }\n      );\n    }\n  },\n  async updatePoliza({ commit }, poliza) {\n    const resp = await http.put(API_URL, poliza.id, poliza);\n    if (resp.status === 200) {\n      commit(\"UPDATE_POLIZA\", resp.data);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          snackbar: true,\n          color: \"success\",\n          snackText: \"Poliza editada con éxito!\"\n        },\n        { root: true }\n      );\n      return true;\n    } else {\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          snackbar: true,\n          color: \"red\",\n          snackText: \"Algo salió mal, intente nuevamente...\"\n        },\n        { root: true }\n      );\n    }\n  },\n  async deletePoliza({ commit }, id) {\n    const resp = await http.delete(API_URL, id);\n    if (resp.status === 200) {\n      commit(\"DELETE_POLIZA\", id);\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          snackbar: true,\n          color: \"success\",\n          snackText: \"Poliza eliminada con éxito!\"\n        },\n        { root: true }\n      );\n      commit(\"modal/HIDE_MODAL\", false, { root: true });\n    } else {\n      commit(\n        \"snackbar/SHOW_SNACK\",\n        {\n          color: \"success\",\n          snackText: \"Algo salió mal...\"\n        },\n        { root: true }\n      );\n    }\n  },\n  async getTipoRiesgos({ commit }) {\n    const resp = await http.get(\"tiporiesgos\");\n    commit(\"SET_TIPO_RIESGOS\", resp.data);\n  },\n  async getFormaPagos({ commit }) {\n    const resp = await http.get(\"formapagos\");\n    commit(\"SET_FORMA_PAGOS\", resp.data);\n  },\n  async getTipoVigencias({ commit }) {\n    const resp = await http.get(\"tipovigencias\");\n    commit(\"SET_TIPO_VIGENCIAS\", resp.data);\n  },\n  async cargarUltimoNumeroSolicitud({ commit }) {\n    const resp = await http.get(\"numerosolicitud\");\n    commit(\"SET_NUMERO_SOLICITUD\", resp.data[0].numero_solicitud);\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters: {}\n};\n"]}]}