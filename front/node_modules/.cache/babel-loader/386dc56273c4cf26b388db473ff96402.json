{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/marca.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/marca.js","mtime":1626303907177},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/marca.js"],"names":["http","API_URL","state","marcas","marca","nombreOriginal","loading","mutations","SET_MARCAS","SET_MARCA","nombre","RESET_MARCA","Object","assign","UPDATE_MARCA","item","find","id","CREATE_MARCA","push","DELETE_MARCA","filter","u","actions","getMarcas","commit","length","get","resp","data","getMarca","getOne","updateMarca","put","status","color","snackText","root","createMarca","post","deleteMarca","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/administracion/marcas';\n\nconst state = () => ({\n    marcas: [],\n    marca: {nombreOriginal:''},\n    \n    loading: false\n});\nconst mutations = {\n    SET_MARCAS(state, marcas) {\n        state.loading = false\n        state.marcas = marcas;\n    },\n    SET_MARCA(state, marca) {\n        state.marca = marca;\n        state.marca.nombreOriginal = marca.nombre;\n    },\n    RESET_MARCA(state) {\n        state.marca = Object.assign(\n            {},\n            {\n            }\n        );\n    },\n    UPDATE_MARCA(state, marca) {\n        const item = state.marcas.find(item => item.id === marca.id);\n        Object.assign(item, marca);\n    },\n    CREATE_MARCA(state, marca) {\n        state.marcas.push(marca);\n    },\n    DELETE_MARCA(state, id) {\n        state.marcas = state.marcas.filter(u => u.id != id);\n    }\n};\nconst actions = {\n    async getMarcas({ state, commit }) {\n        if(state.marcas.length == 0){\n            state.loading = true;\n        }\n        const resp = await http.get(API_URL);\n        commit(\"SET_MARCAS\", resp.data);\n    },\n\n    async getMarca({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit(\"SET_MARCA\", resp.data);\n    },\n\n    async updateMarca({ commit }, marca) {\n        const resp = await http.put(\n            API_URL,\n            marca.id,\n            marca\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_MARCA\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Marca editada con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\"({\n                    color: \"success\",\n                    snackText: \"Algo salió mal...\"\n                }),\n                { root: true }\n            );\n        }\n    },\n\n    async createMarca({ commit }, marca) {\n        const resp = await http.post(API_URL, marca);\n        if (resp.status === 201) {\n            commit(\"CREATE_MARCA\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Marca creada con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n\n    async deleteMarca({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_MARCA\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Marca eliminada con éxito!\"\n                },\n                { root: true }\n            );\n        } else if (resp.status === 202) {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"red\",\n                snackText: \"Existen modelos relacionados a este marca\"\n            },\n                { root: true }\n            );\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    }\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}