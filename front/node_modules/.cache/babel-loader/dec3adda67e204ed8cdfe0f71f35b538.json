{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/organizador.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/organizador.js","mtime":1614396790823},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/organizador.js"],"names":["http","API_URL","state","organizadores","organizador","cuit","matricula","activo","matriuclaOriginal","cuitOriginal","loading","mutations","SET_ORGANIZADORES","SET_ORGANIZADOR","matriculaOriginal","RESET_ORGANIZADOR","Object","assign","UPDATE_ORGANIZADOR","item","find","id","CREATE_ORGANIZADOR","push","DELETE_ORGANIZADOR","filter","u","actions","getOrganizadores","commit","get","resp","data","getOrganizador","getOne","updateOrganizador","put","status","color","snackText","root","createOrganizador","post","deleteOrganizador","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/configuracion/organizadores';\n\nconst state = () => ({\n    organizadores: [],\n    organizador: {\n        cuit: \"\",\n        matricula: \"\",\n        activo: 1,\n        matriuclaOriginal: '',\n        cuitOriginal: ''\n    },\n    loading: false\n});\nconst mutations = {\n    SET_ORGANIZADORES(state, organizadores) {\n        state.organizadores = organizadores;\n        state.loading = false\n    },\n    SET_ORGANIZADOR(state, organizador) {\n        state.organizador = organizador;\n        state.organizador.cuitOriginal = organizador.cuit;\n        state.organizador.matriculaOriginal = organizador.matricula;\n    },\n    RESET_ORGANIZADOR(state) {\n        state.organizador = Object.assign(\n            {},\n            {\n                cuit: \"\",\n                matricula: \"\",\n                activo: 1,\n                matriculaOriginal: '',\n                cuitOriginal: ''\n            }\n        );\n    },\n    UPDATE_ORGANIZADOR(state, organizador) {\n        const item = state.organizadores.find(item => item.id === organizador.id);\n        Object.assign(item, organizador);\n    },\n    CREATE_ORGANIZADOR(state, organizador) {\n        state.organizadores.push(organizador);\n    },\n    DELETE_ORGANIZADOR(state, id) {\n        state.organizadores = state.organizadores.filter(u => u.id != id);\n    }\n};\nconst actions = {\n    async getOrganizadores({ commit }) {\n        const resp = await http.get(API_URL);\n        commit(\"SET_ORGANIZADORES\", resp.data);\n    },\n\n    async getOrganizador({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit(\"SET_ORGANIZADOR\", resp.data);\n    },\n\n    async updateOrganizador({ commit }, organizador) {\n        const resp = await http.put(\n            API_URL,\n            organizador.id,\n            organizador\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_ORGANIZADOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Organizador editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\"({\n                    color: \"success\",\n                    snackText: \"Algo salió mal...\"\n                }),\n                { root: true }\n            );\n        }\n    },\n\n    async createOrganizador({ commit }, organizador) {\n        const resp = await http.post(API_URL, organizador);\n        if (resp.status === 201) {\n            commit(\"CREATE_ORGANIZADOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Organizador creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n\n    async deleteOrganizador({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_ORGANIZADOR\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Organizador eliminado con éxito!\"\n                },\n                { root: true }\n            );\n        } else if (resp.status === 202) {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"red\",\n                snackText: \"Existen Códigos Organizadores relacionados a este Organizador\"\n            },\n                { root: true }\n            );\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    }\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}