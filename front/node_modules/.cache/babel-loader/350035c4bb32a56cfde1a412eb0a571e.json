{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/riesgo_automotor.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/riesgo_automotor.js","mtime":1626391617910},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/riesgo_automotor.js"],"names":["http","API_URL","state","riesgo_automotor","otro_riesgo","loading","mutations","SET_PRODUCTORES","productores","SET_PRODUCTOR","productor","cuitOriginal","cuit","matriculaOriginal","matricula","RESET_PRODUCTOR","Object","assign","activo","matriuclaOriginal","UPDATE_PRODUCTOR","item","find","id","CREATE_PRODUCTOR","push","DELETE_PRODUCTOR","filter","u","actions","getProductores","commit","get","resp","data","getProductor","getOne","updateProductor","put","status","color","snackText","root","createProductor","post","deleteProductor","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/configuracion/productores';\n\nconst state = () => ({\n    riesgo_automotor:{},\n    otro_riesgo:{},\n    loading: false\n});\nconst mutations = {\n    SET_PRODUCTORES(state, productores) {\n        state.loading = false\n        state.productores = productores;\n    },\n    SET_PRODUCTOR(state, productor) {\n        state.productor = productor;\n        state.productor.cuitOriginal = productor.cuit;\n        state.productor.matriculaOriginal = productor.matricula;\n    },\n    RESET_PRODUCTOR(state) {\n        state.productor = Object.assign(\n            {},\n            {\n                cuit: \"\",\n                matricula: \"\",\n                activo: 1,\n                matriuclaOriginal: '',\n                cuitOriginal: ''\n            }\n        );\n    },\n    UPDATE_PRODUCTOR(state, productor) {\n        const item = state.productores.find(item => item.id === productor.id);\n        Object.assign(item, productor);\n    },\n    CREATE_PRODUCTOR(state, productor) {\n        state.productores.push(productor);\n    },\n    DELETE_PRODUCTOR(state, id) {\n        state.productores = state.productores.filter(u => u.id != id);\n    }\n};\nconst actions = {\n    async getProductores({ commit }) {\n        const resp = await http.get(API_URL);\n        commit(\"SET_PRODUCTORES\", resp.data);\n    },\n\n    async getProductor({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit(\"SET_PRODUCTOR\", resp.data);\n    },\n\n    async updateProductor({ commit }, productor) {\n        const resp = await http.put(\n            API_URL,\n            productor.id,\n            productor\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_PRODUCTOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Productor editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\"({\n                    color: \"success\",\n                    snackText: \"Algo salió mal...\"\n                }),\n                { root: true }\n            );\n        }\n    },\n\n    async createProductor({ commit }, productor) {\n        const resp = await http.post(API_URL, productor);\n        if (resp.status === 201) {\n            commit(\"CREATE_PRODUCTOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Productor creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n\n    async deleteProductor({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_PRODUCTOR\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Productor eliminado con éxito!\"\n                },\n                { root: true }\n            );\n        } else if (resp.status === 202) {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"red\",\n                snackText: \"Existen Códigos Productores relacionados a este Productor\"\n            },\n                { root: true }\n            );\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    }\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}