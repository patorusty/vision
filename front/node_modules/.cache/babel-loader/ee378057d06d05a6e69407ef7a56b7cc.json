{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/riesgo.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/riesgo.js","mtime":1626908094565},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/riesgo.js"],"names":["http","API_URL","API_URL_RA","state","riesgo_automotor","tipo_patente","otro_riesgo","loading","mutations","SET_RIESGO_AUTOMOTORES","riesgo_automotores","SET_RIESGO_AUTOMOTOR","RESET_RIESGO_AUTOMOTOR","Object","assign","UPDATE_RIESGO_AUTOMOTOR","item","find","id","CREATE_RIESGO_AUTOMOTOR","push","DELETE_RIESGO_AUTOMOTOR","filter","u","actions","getRiesgoAutomotores","commit","get","resp","data","getRiesgoAutomotor","updateRiesgoAutomotor","put","status","color","snackText","root","createRiesgoAutomotor","post","deleteRiesgoAutomotor","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/riesgo_automotor';\nconst API_URL_RA = '/riesgo_automotor';\n\nconst state = () => ({\n    riesgo_automotor:{\n        tipo_patente: 0\n    },\n    otro_riesgo:{},\n    loading: false\n});\nconst mutations = {\n    SET_RIESGO_AUTOMOTORES(state, riesgo_automotores) {\n        state.loading = false\n        state.riesgo_automotores = riesgo_automotores;\n    },\n    SET_RIESGO_AUTOMOTOR(state, riesgo_automotor) {\n        state.riesgo_automotor = riesgo_automotor;\n    },\n    RESET_RIESGO_AUTOMOTOR(state) {\n        state.riesgo_automotor = Object.assign({},{ tipo_patente: 0});\n    },\n    UPDATE_RIESGO_AUTOMOTOR(state, riesgo_automotor) {\n        const item = state.riesgo_automotores.find(item => item.id === riesgo_automotor.id);\n        Object.assign(item, riesgo_automotor);\n    },\n    CREATE_RIESGO_AUTOMOTOR(state, riesgo_automotor) {\n        state.riesgo_automotores.push(riesgo_automotor);\n    },\n    DELETE_RIESGO_AUTOMOTOR(state, id) {\n        state.riesgo_automotores = state.riesgo_automotores.filter(u => u.id != id);\n    }\n};\nconst actions = {\n    async getRiesgoAutomotores({ commit }) {\n        const resp = await http.get(API_URL_RA);\n        commit(\"SET_RIESGO_AUTOMOTORES\", resp.data);\n    },\n\n    async getRiesgoAutomotor({ commit }) {\n        // const resp = await http.getOne(API_URL_RA, id);\n        // commit(\"SET_RIESGO_AUTOMOTOR\", resp.data);\n    },\n\n    async updateRiesgoAutomotor({ commit }, riesgo_automotor) {\n        const resp = await http.put(\n            API_URL_RA,\n            riesgo_automotor.id,\n            riesgo_automotor\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_RIESGO_AUTOMOTOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Riesgo editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\"({\n                    color: \"success\",\n                    snackText: \"Algo salió mal...\"\n                }),\n                { root: true }\n            );\n        }\n    },\n\n    async createRiesgoAutomotor({ commit }, riesgo_automotor) {\n        const resp = await http.post(API_URL_RA, riesgo_automotor);\n        if (resp.status === 201) {\n            commit(\"CREATE_RIESGO_AUTOMOTOR\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Riesgo creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n\n    async deleteRiesgoAutomotor({ commit }, id) {\n        const resp = await http.delete(API_URL_RA, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_RIESGO_AUTOMOTOR\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Riesgo eliminado con éxito!\"\n                },\n                { root: true }\n            );\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    }\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}