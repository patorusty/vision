{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/modelo.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/modelo.js","mtime":1627764386835},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/modelo.js"],"names":["http","API_URL","state","modelos","modelo","marca_id","loading","mutations","SET_MODELOS","SET_MODELO","nombreOriginal","nombre","RESET_MODELO","Object","assign","UPDATE_MODELO","item","find","id","CREATE_MODELO","push","DELETE_MODELO","filter","u","UPDATE_MARCA_ID","actions","getModelos","commit","get","resp","data","getModelo","getOne","updateModelo","put","status","color","snackText","root","createModelo","automotor_marca_id","post","deleteModelo","delete","getModelosPorMArca","updateMarcaId","rootState","found","element","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/administracion/modelos';\n\nconst state = () => ({\n    modelos: [],\n    modelo: {},\n    marca_id: null,\n    loading: false\n});\nconst mutations = {\n    SET_MODELOS(state, modelos) {\n        state.loading = false\n        state.modelos = modelos;\n    },\n    SET_MODELO(state, modelo) {\n        state.modelo = modelo;\n        state.modelo.nombreOriginal = modelo.nombre;\n    },\n    RESET_MODELO(state) {\n        state.modelo = Object.assign({},{});\n    },\n    UPDATE_MODELO(state, modelo) {\n        const item = state.modelos.find(item => item.id === modelo.id);\n        Object.assign(item, modelo);\n    },\n    CREATE_MODELO(state, modelo) {\n        state.modelos.push(modelo);\n    },\n    DELETE_MODELO(state, id) {\n        state.modelos = state.modelos.filter(u => u.id != id);\n    },\n    UPDATE_MARCA_ID(state, marca_id) {\n        state.marca_id = marca_id;\n    }\n};\nconst actions = {\n    async getModelos({ commit }) {\n        const resp = await http.get(API_URL);\n        commit(\"SET_MODELOS\", resp.data);\n    },\n\n    async getModelo({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit(\"SET_MODELO\", resp.data);\n    },\n\n    async updateModelo({ commit }, modelo) {\n        const resp = await http.put(\n            API_URL,\n            modelo.id,\n            modelo\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_MODELO\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Modelo editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\"({\n                    color: \"success\",\n                    snackText: \"Algo salió mal...\"\n                }),\n                { root: true }\n            );\n        }\n    },\n\n    async createModelo({ state, commit }, modelo) {\n        modelo.automotor_marca_id = state.marca_id;\n        const resp = await http.post(API_URL, modelo);\n        if (resp.status === 201) {\n            commit(\"CREATE_MODELO\", resp.data);\n            commit(\"SET_MODELO\", resp.data);\n            commit(\"version/RESET_MODELO_ID\", resp.data.id,{ root: true });\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Modelo creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n\n    async deleteModelo({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_MODELO\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    color: \"success\",\n                    snackText: \"Modelo eliminado con éxito!\"\n                },\n                { root: true }\n            );\n        } else if (resp.status === 202) {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"red\",\n                snackText: \"Existen versiones relacionados a este modelo\"\n            },\n                { root: true }\n            );\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    },\n\n    async getModelosPorMArca({ commit, state }) {\n        if (state.marca_id) {\n            const resp = await http.getOne('/modelos/filtrar', state.marca_id);\n            commit(\"SET_MODELOS\", resp.data);\n        }\n    },\n\n    updateMarcaId({commit, rootState}, marca_id){\n        commit(\"UPDATE_MARCA_ID\", marca_id);\n        const found = rootState.modelo.modelos.find(element => element.automotor_marca_id ==  rootState.modelo.marca_id);\n        commit(\"version/RESET_MODELO_ID\", found, { root: true });\n    }\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}