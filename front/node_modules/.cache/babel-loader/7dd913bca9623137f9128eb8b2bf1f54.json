{"remainingRequest":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js!/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/patorusty/dev/web/vision/front/src/modules/siniestro.js","dependencies":[{"path":"/Users/patorusty/dev/web/vision/front/src/modules/siniestro.js","mtime":1614547827747},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/patorusty/dev/web/vision/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wYXRvcnVzdHkvZGV2L3dlYi92aXNpb24vZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgaHR0cCBmcm9tICIuLi9odHRwLXJlcXVlc3QiOwp2YXIgQVBJX1VSTCA9ICcvc2luaWVzdHJvcyc7Cgp2YXIgc3RhdGUgPSBmdW5jdGlvbiBzdGF0ZSgpIHsKICByZXR1cm4gewogICAgc2luaWVzdHJvczogW10sCiAgICBzaW5pZXN0cm86IHt9LAogICAgbG9hZGluZzogdHJ1ZQogIH07Cn07Cgp2YXIgbXV0YXRpb25zID0gewogIFNFVF9TSU5JRVNUUk9TOiBmdW5jdGlvbiBTRVRfU0lOSUVTVFJPUyhzdGF0ZSwgc2luaWVzdHJvcykgewogICAgc3RhdGUubG9hZGluZyA9IGZhbHNlOwogICAgc3RhdGUuc2luaWVzdHJvcyA9IHNpbmllc3Ryb3M7CiAgfSwKICBTRVRfU0lOSUVTVFJPOiBmdW5jdGlvbiBTRVRfU0lOSUVTVFJPKHN0YXRlLCBzaW5pZXN0cm8pIHsKICAgIHN0YXRlLnNpbmllc3RybyA9IHNpbmllc3RybzsKICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTsKICB9LAogIFJFU0VUX1NJTklFU1RSTzogZnVuY3Rpb24gUkVTRVRfU0lOSUVTVFJPKHN0YXRlKSB7CiAgICBzdGF0ZS5zaW5pZXN0cm8gPSBPYmplY3QuYXNzaWduKHt9LCB7fSk7CiAgfSwKICBDUkVBVEVfU0lOSUVTVFJPOiBmdW5jdGlvbiBDUkVBVEVfU0lOSUVTVFJPKHN0YXRlLCBzaW5pZXN0cm8pIHsKICAgIHN0YXRlLnNpbmllc3Ryb3MucHVzaChzaW5pZXN0cm8pOwogIH0sCiAgVVBEQVRFX1NJTklFU1RSTzogZnVuY3Rpb24gVVBEQVRFX1NJTklFU1RSTyhzdGF0ZSwgc2luaWVzdHJvKSB7CiAgICB2YXIgaXRlbSA9IHN0YXRlLnNpbmllc3Ryb3MuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS5pZCA9PT0gc2luaWVzdHJvLmlkOwogICAgfSk7CiAgICBPYmplY3QuYXNzaWduKGl0ZW0sIHNpbmllc3Rybyk7CiAgfSwKICBERUxFVEVfU0lOSUVTVFJPOiBmdW5jdGlvbiBERUxFVEVfU0lOSUVTVFJPKHN0YXRlLCBpZCkgewogICAgc3RhdGUuc2luaWVzdHJvcyA9IHN0YXRlLnNpbmllc3Ryb3MuZmlsdGVyKGZ1bmN0aW9uIChjKSB7CiAgICAgIHJldHVybiBjLmlkICE9IGlkOwogICAgfSk7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRTaW5pZXN0cm9zOiBmdW5jdGlvbiBnZXRTaW5pZXN0cm9zKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3A7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gaHR0cC5nZXQoQVBJX1VSTCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfU0lOSUVTVFJPUycsIHJlc3AuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBnZXRTaW5pZXN0cm86IGZ1bmN0aW9uIGdldFNpbmllc3RybyhfcmVmMiwgaWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAuZ2V0T25lKEFQSV9VUkwsIGlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfU0lOSUVTVFJPJywgcmVzcC5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0U2luaWVzdHJvc0RlUG9saXphOiBmdW5jdGlvbiBnZXRTaW5pZXN0cm9zRGVQb2xpemEoX3JlZjMsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmdldE9uZSgnL3Npbmllc3Ryb3MvaW5kZXhGaWx0cmFkbycsIGlkKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfU0lOSUVTVFJPUycsIHJlc3AuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGNyZWF0ZVNpbmllc3RybzogZnVuY3Rpb24gY3JlYXRlU2luaWVzdHJvKF9yZWY0LCBzaW5pZXN0cm8pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucG9zdChBUElfVVJMLCBzaW5pZXN0cm8pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3AgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCEocmVzcC5zdGF0dXMgPT09IDIwMSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbW1pdCgiQ1JFQVRFX1NJTklFU1RSTyIsIHJlc3AuZGF0YSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgc25hY2tiYXI6IHRydWUsCiAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiU2luaWVzdHJvIGNyZWFkbyBjb24gw6l4aXRvISIKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjb21taXQoInNuYWNrYmFyL1NIT1dfU05BQ0siLCB7CiAgICAgICAgICAgICAgICBzbmFja2JhcjogdHJ1ZSwKICAgICAgICAgICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIkFsZ28gc2FsacOzIG1hbCwgaW50ZW50ZSBudWV2YW1lbnRlLi4uIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZVNpbmllc3RybzogZnVuY3Rpb24gdXBkYXRlU2luaWVzdHJvKF9yZWY1LCBzaW5pZXN0cm8pIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICB2YXIgY29tbWl0LCByZXNwOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGh0dHAucHV0KEFQSV9VUkwsIHNpbmllc3Ryby5pZCwgc2luaWVzdHJvKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXNwID0gX2NvbnRleHQ1LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHJlc3Auc3RhdHVzID09PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjb21taXQoIlVQREFURV9TSU5JRVNUUk8iLCByZXNwLmRhdGEpOwogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIHNuYWNrYmFyOiB0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgIHNuYWNrVGV4dDogIlNpbmllc3RybyBlZGl0YWRvIGNvbiDDqXhpdG8hIgogICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgdHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNvbW1pdCgic25hY2tiYXIvU0hPV19TTkFDSyIsIHsKICAgICAgICAgICAgICAgIHNuYWNrYmFyOiB0cnVlLAogICAgICAgICAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiQWxnbyBzYWxpw7MgbWFsLCBpbnRlbnRlIG51ZXZhbWVudGUuLi4iCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlU2luaWVzdHJvOiBmdW5jdGlvbiBkZWxldGVTaW5pZXN0cm8oX3JlZjYsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBodHRwLmRlbGV0ZShBUElfVVJMLCBpZCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0Ni5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzcC5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgICAgY29tbWl0KCJERUxFVEVfU0lOSUVTVFJPIiwgaWQpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgICBzbmFja2JhcjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgc25hY2tUZXh0OiAiU2luaWVzdHJvIGVsaW1pbmFkbyBjb24gw6l4aXRvISIKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ21vZGFsL0hJREVfTU9EQUwnLCBmYWxzZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29tbWl0KCJzbmFja2Jhci9TSE9XX1NOQUNLIiwgewogICAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICBzbmFja1RleHQ6ICJBbGdvIHNhbGnDsyBtYWwuLi4iCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU2KTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczoge30KfTs="},{"version":3,"sources":["/Users/patorusty/dev/web/vision/front/src/modules/siniestro.js"],"names":["http","API_URL","state","siniestros","siniestro","loading","mutations","SET_SINIESTROS","SET_SINIESTRO","RESET_SINIESTRO","Object","assign","CREATE_SINIESTRO","push","UPDATE_SINIESTRO","item","find","id","DELETE_SINIESTRO","filter","c","actions","getSiniestros","commit","get","resp","data","getSiniestro","getOne","getSiniestrosDePoliza","createSiniestro","post","status","snackbar","color","snackText","root","updateSiniestro","put","deleteSiniestro","delete","namespaced","getters"],"mappings":"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","sourcesContent":["import http from \"../http-request\";\n\nconst API_URL = '/siniestros';\n\nconst state = () => ({\n    siniestros: [],\n    siniestro: {},\n    loading: true\n});\nconst mutations = {\n    SET_SINIESTROS(state, siniestros) {\n        state.loading = false\n        state.siniestros = siniestros\n    },\n    SET_SINIESTRO(state, siniestro) {\n        state.siniestro = siniestro\n        state.loading = false\n    },\n    RESET_SINIESTRO(state) {\n        state.siniestro = Object.assign(\n            {},\n            {}\n        );\n    },\n    CREATE_SINIESTRO(state, siniestro) {\n        state.siniestros.push(siniestro);\n    },\n    UPDATE_SINIESTRO(state, siniestro) {\n        var item = state.siniestros.find(item => item.id === siniestro.id);\n        Object.assign(item, siniestro);\n    },\n    DELETE_SINIESTRO(state, id) {\n        state.siniestros = state.siniestros.filter(c => c.id != id);\n    },\n};\nconst actions = {\n    async getSiniestros({ commit }) {\n        const resp = await http.get(API_URL);\n        commit('SET_SINIESTROS', resp.data)\n    },\n    async getSiniestro({ commit }, id) {\n        const resp = await http.getOne(API_URL, id);\n        commit('SET_SINIESTRO', resp.data)\n    },\n    async getSiniestrosDePoliza({ commit }, id) {\n        const resp = await http.getOne('/siniestros/indexFiltrado', id);\n        commit('SET_SINIESTROS', resp.data)\n    },\n    async createSiniestro({ commit }, siniestro) {\n        const resp = await http.post(API_URL, siniestro)\n        if (resp.status === 201) {\n            commit(\"CREATE_SINIESTRO\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Siniestro creado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n    async updateSiniestro({ commit }, siniestro) {\n        const resp = await http.put(\n            API_URL,\n            siniestro.id,\n            siniestro\n        );\n        if (resp.status === 200) {\n            commit(\"UPDATE_SINIESTRO\", resp.data);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Siniestro editado con éxito!\"\n                },\n                { root: true }\n            );\n            return true;\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"red\",\n                    snackText: \"Algo salió mal, intente nuevamente...\"\n                },\n                { root: true }\n            );\n        }\n    },\n    async deleteSiniestro({ commit }, id) {\n        const resp = await http.delete(API_URL, id);\n        if (resp.status === 200) {\n            commit(\"DELETE_SINIESTRO\", id);\n            commit(\n                \"snackbar/SHOW_SNACK\",\n                {\n                    snackbar: true,\n                    color: \"success\",\n                    snackText: \"Siniestro eliminado con éxito!\"\n                },\n                { root: true }\n            );\n            commit('modal/HIDE_MODAL', false,\n                { root: true });\n        } else {\n            commit(\n                \"snackbar/SHOW_SNACK\", {\n                color: \"success\",\n                snackText: \"Algo salió mal...\"\n            },\n                { root: true }\n            );\n        }\n    },\n\n};\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters: {}\n};\n"]}]}